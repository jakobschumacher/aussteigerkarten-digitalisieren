scanfolder = "01_scans/",
storedscanfolder = "02_pdfs/",
individualcardfolder = "03_pngs/",
shinypicturefolder = "www/",
numberofpagestoprocess = c(1:3),
pdfconvertquality = 50) {
# Get date and time stamp
startingdatetime <- gsub(" ", "", as.character(format(Sys.time(), "%Y%m%d%H%M%S")))
# Read the first scan and put it in next folder
files <- list.files(scanfolder, pattern = ".pdf$")
currentscanwithpath <- paste0(scanfolder, files[1])
currentscanwithoutpath <- files[1]
file.copy(currentscanwithpath, storedscanfolder)
# file.remove(currentscan)
currentpdfname <- paste0(storedscanfolder, startingdatetime, ".pdf")
file.rename(paste0(storedscanfolder, files[1]), currentpdfname)
# Read pdf an split it up
lengthofpdf <- pdf_length(currentpdfname)
pdf_convert(currentpdfname, pages = numberofpagestoprocess, dpi = pdfconvertquality) # Here should be an output folder, then we could skip the next few lines
pngfiles <- list.files(pattern = ".png$")
for(file in pngfiles) {
file.copy(file, paste0(individualcardfolder, pngfiles))
file.remove(file)
}
}
turn_scan_into_single_cards()
# Get date and time stamp
startingdatetime <- gsub(" ", "", as.character(format(Sys.time(), "%Y%m%d%H%M%S")))
getwd()
# Read the first scan and put it in next folder
files <- list.files(scanfolder, pattern = ".pdf$")
files
scanfolder = paste0(basefolder, scanfolder)
storedscanfolder = paste0(basefolder, storedscanfolder)
individualcardfolder = paste0(basefolder, individualcardfolder)
shinypicturefolder = paste0(basefolder, shinypicturefolder)
# Read the first scan and put it in next folder
files <- list.files(scanfolder, pattern = ".pdf$")
# Read the first scan and put it in next folder
files <- list.files(scanfolder, pattern = ".pdf$")
files
currentscanwithpath <- paste0(scanfolder, files[1])
currentscanwithoutpath <- files[1]
file.copy(currentscanwithpath, storedscanfolder)
# file.remove(currentscan)
currentpdfname <- paste0(storedscanfolder, startingdatetime, ".pdf")
file.rename(paste0(storedscanfolder, files[1]), currentpdfname)
# Read pdf an split it up
lengthofpdf <- pdf_length(currentpdfname)
library(pdftools)
# Read pdf an split it up
lengthofpdf <- pdf_length(currentpdfname)
pdf_convert(currentpdfname, pages = numberofpagestoprocess, dpi = pdfconvertquality) # Here should be an output folder, then we could skip the next few lines
turn_scan_into_single_cards <- function(
basefolder = "digitalisierung_fluggastdaten/",
scanfolder = "01_scans/",
storedscanfolder = "02_pdfs/",
individualcardfolder = "03_pngs/",
shinypicturefolder = "www/",
numberofpagestoprocess = c(1:3),
pdfconvertquality = 50) {
library(pdftools)
# Get date and time stamp
startingdatetime <- gsub(" ", "", as.character(format(Sys.time(), "%Y%m%d%H%M%S")))
scanfolder = paste0(basefolder, scanfolder)
storedscanfolder = paste0(basefolder, storedscanfolder)
individualcardfolder = paste0(basefolder, individualcardfolder)
shinypicturefolder = paste0(basefolder, shinypicturefolder)
# Read the first scan and put it in next folder
files <- list.files(scanfolder, pattern = ".pdf$")
currentscanwithpath <- paste0(scanfolder, files[1])
currentscanwithoutpath <- files[1]
file.copy(currentscanwithpath, storedscanfolder)
# file.remove(currentscan)
currentpdfname <- paste0(storedscanfolder, startingdatetime, ".pdf")
file.rename(paste0(storedscanfolder, files[1]), currentpdfname)
# Read pdf an split it up
lengthofpdf <- pdf_length(currentpdfname)
pdf_convert(currentpdfname, pages = numberofpagestoprocess, dpi = pdfconvertquality) # Here should be an output folder, then we could skip the next few lines
pngfiles <- list.files(pattern = ".png$")
for(file in pngfiles) {
file.copy(file, paste0(individualcardfolder, pngfiles))
file.remove(file)
}
}
turn_scan_into_single_cards()
turn_scan_into_single_cards(numberofpagestoprocess = c(1:20))
copy.file(paste0(basefolder, standardpdf), paste0(basefolder, scanfolder))
file.copy(paste0(basefolder, standardpdf), paste0(basefolder, scanfolder), overwrite = TRUE)
standardpdf = "examplescan.pdf"
file.copy(paste0(basefolder, standardpdf), paste0(basefolder, scanfolder), overwrite = TRUE)
prepare_scratch <- function( standardpdf = "examplescan.pdf",
basefolder = "digitalisierung_fluggastdaten/",
scanfolder = "01_scans/",
storedscanfolder = "02_pdfs/",
individualcardfolder = "03_pngs/",
shinypicturefolder = "www/") {
# Removine all files in storedscanfolder and individualcardfolder for testing
if (length(list.files(paste0(basefolder,storedscanfolder)))!=0){
file.remove(paste0(basefolder, storedscanfolder, list.files(paste0(basefolder,storedscanfolder))))
}
if (length(list.files(paste0(basefolder,individualcardfolder)))!=0){
file.remove(paste0(basefolder, individualcardfolder, list.files(paste0(basefolder,individualcardfolder))))
}
file.copy(paste0(basefolder, standardpdf), paste0(basefolder, scanfolder, standardpdf), overwrite = TRUE)
}
prepare_scratch()
turn_scan_into_single_cards <- function(
basefolder = "digitalisierung_fluggastdaten/",
scanfolder = "01_scans/",
storedscanfolder = "02_pdfs/",
individualcardfolder = "03_pngs/",
shinypicturefolder = "www/",
numberofpagestoprocess = c(1:3),
pdfconvertquality = 50) {
library(pdftools)
# Get date and time stamp
startingdatetime <- gsub(" ", "", as.character(format(Sys.time(), "%Y%m%d%H%M%S")))
scanfolder = paste0(basefolder, scanfolder)
storedscanfolder = paste0(basefolder, storedscanfolder)
individualcardfolder = paste0(basefolder, individualcardfolder)
shinypicturefolder = paste0(basefolder, shinypicturefolder)
# Read the first scan and put it in next folder
files <- list.files(scanfolder, pattern = ".pdf$")
currentscanwithpath <- paste0(scanfolder, files[1])
currentscanwithoutpath <- files[1]
file.copy(currentscanwithpath, storedscanfolder)
# file.remove(currentscan)
currentpdfname <- paste0(storedscanfolder, startingdatetime, ".pdf")
file.rename(paste0(storedscanfolder, files[1]), currentpdfname)
# Read pdf an split it up
lengthofpdf <- pdf_length(currentpdfname)
pdf_convert(currentpdfname, pages = numberofpagestoprocess, dpi = pdfconvertquality) # Here should be an output folder, then we could skip the next few lines
pngfiles <- list.files(pattern = ".png$")
for(file in pngfiles) {
file.copy(file, paste0(individualcardfolder, pngfiles))
file.remove(file)
}
}
turn_scan_into_single_cards()
turn_scan_into_single_cards(numberofpagestoprocess = 1:22)
turn_scan_into_single_cards(numberofpagestoprocess = 1:22)
prepare_scratch <- function( standardpdf = "examplescan.pdf",
basefolder = "digitalisierung_fluggastdaten/",
scanfolder = "01_scans/",
storedscanfolder = "02_pdfs/",
individualcardfolder = "03_pngs/",
shinypicturefolder = "www/") {
# Removine all files in storedscanfolder and individualcardfolder for testing
if (length(list.files(paste0(basefolder,storedscanfolder)))!=0){
file.remove(paste0(basefolder, storedscanfolder, list.files(paste0(basefolder,storedscanfolder))))
}
if (length(list.files(paste0(basefolder,individualcardfolder)))!=0){
file.remove(paste0(basefolder, individualcardfolder, list.files(paste0(basefolder,individualcardfolder))))
}
file.copy(paste0(basefolder, standardpdf), paste0(basefolder, scanfolder, standardpdf), overwrite = TRUE)
}
prepare_scratch()
turn_scan_into_single_cards()
turn_scan_into_single_cards <- function(
basefolder = "digitalisierung_fluggastdaten/",
scanfolder = "01_scans/",
storedscanfolder = "02_pdfs/",
individualcardfolder = "03_pngs/",
shinypicturefolder = "www/",
numberofpagestoprocess = c(1:3),
pdfconvertquality = 50) {
library(pdftools)
# Get date and time stamp
startingdatetime <- gsub(" ", "", as.character(format(Sys.time(), "%Y%m%d%H%M%S")))
scanfolder = paste0(basefolder, scanfolder)
storedscanfolder = paste0(basefolder, storedscanfolder)
individualcardfolder = paste0(basefolder, individualcardfolder)
shinypicturefolder = paste0(basefolder, shinypicturefolder)
# Read the first scan and put it in next folder
files <- list.files(scanfolder, pattern = ".pdf$")
currentscanwithpath <- paste0(scanfolder, files[1])
currentscanwithoutpath <- files[1]
file.copy(currentscanwithpath, storedscanfolder)
file.remove(currentscanwithpath)
currentpdfname <- paste0(storedscanfolder, startingdatetime, ".pdf")
file.rename(paste0(storedscanfolder, files[1]), currentpdfname)
# Read pdf an split it up
lengthofpdf <- pdf_length(currentpdfname)
pdf_convert(currentpdfname, pages = numberofpagestoprocess, dpi = pdfconvertquality) # Here should be an output folder, then we could skip the next few lines
pngfiles <- list.files(pattern = ".png$")
for(file in pngfiles) {
file.copy(file, paste0(individualcardfolder, pngfiles))
file.remove(file)
}
}
turn_scan_into_single_cards()
shiny::runApp('digitalisierung_fluggastdaten')
runApp('digitalisierung_fluggastdaten')
runApp('digitalisierung_fluggastdaten')
runApp('digitalisierung_fluggastdaten')
runApp('digitalisierung_fluggastdaten')
list.files("01_scans")
list.files(paste0(basefolder, "01_scans"))
basefolder
getwd()
list.files(paste0(basefolder, "01_scans/"))
prepare_scratch()
list.files(paste0(basefolder, "01_scans/"))
length(list.files(paste0(basefolder, "01_scans/")))
runApp('digitalisierung_fluggastdaten')
runApp('digitalisierung_fluggastdaten')
runApp('digitalisierung_fluggastdaten')
runApp('digitalisierung_fluggastdaten')
runApp()
runApp()
runApp('digitalisierung_fluggastdaten')
runApp()
runApp('digitalisierung_fluggastdaten')
runApp()
runApp('digitalisierung_fluggastdaten')
source("prepare_scratch.R")
source("prepare_scratch.R")
source("digitalisierung_fluggastdaten/prepare_scratch.R")
runApp('digitalisierung_fluggastdaten')
runApp('digitalisierung_fluggastdaten')
source("turn_scan_into_single_cards.R")
runApp('digitalisierung_fluggastdaten')
runApp('digitalisierung_fluggastdaten')
runApp('digitalisierung_fluggastdaten')
runApp('digitalisierung_fluggastdaten')
runApp()
runApp('digitalisierung_fluggastdaten')
runApp()
runApp('digitalisierung_fluggastdaten')
runApp()
turn_scan_into_single_cards <- function(
basefolder = "digitalisierung_fluggastdaten/",
scanfolder = "01_scans/",
storedscanfolder = "02_pdfs/",
individualcardfolder = "03_pngs/",
shinypicturefolder = "www/",
numberofpagestoprocess = c(1:3),
pdfconvertquality = 50) {
library(pdftools)
# Get date and time stamp
startingdatetime <- gsub(" ", "", as.character(format(Sys.time(), "%Y%m%d%H%M%S")))
scanfolder = paste0(basefolder, scanfolder)
storedscanfolder = paste0(basefolder, storedscanfolder)
individualcardfolder = paste0(basefolder, individualcardfolder)
shinypicturefolder = paste0(basefolder, shinypicturefolder)
# Read the first scan and put it in next folder
files <- list.files(scanfolder, pattern = ".pdf$")
currentscanwithpath <- paste0(scanfolder, files[1])
currentscanwithoutpath <- files[1]
file.copy(currentscanwithpath, storedscanfolder)
file.remove(currentscanwithpath)
currentpdfname <- paste0(storedscanfolder, startingdatetime, ".pdf")
file.rename(paste0(storedscanfolder, files[1]), currentpdfname)
# Read pdf an split it up
lengthofpdf <- pdf_length(currentpdfname)
pdf_convert(currentpdfname, pages = numberofpagestoprocess, dpi = pdfconvertquality) # Here should be an output folder, then we could skip the next few lines
pngfiles <- list.files(pattern = ".png$")
for(file in pngfiles) {
file.copy(file, paste0(individualcardfolder, pngfiles))
file.remove(file)
}
}
turn_scan_into_single_cards()
runApp('digitalisierung_fluggastdaten')
runApp('digitalisierung_fluggastdaten')
runApp('digitalisierung_fluggastdaten')
runApp('digitalisierung_fluggastdaten')
normalizePath(file.path('pngs/20200816212504_1.png'))
normalizePath(file.path('pngs/20200816212504_1.png'))
file.path('pngs/20200816212504_1.png')
filename <- file.path('pngs/20200816212504_1.png')
filename
filename <- normalizePath(file.path('pngs/20200816212504_1.png'))
filename <- file.path('pngs/20200816212504_1.png')
filename
runApp('digitalisierung_fluggastdaten')
prepare_scratch()
turn_scan_into_single_cards()
runApp('digitalisierung_fluggastdaten')
prepare_scratch()
turn_scan_into_single_cards <- function(
basefolder = "digitalisierung_fluggastdaten/",
scanfolder = "01_scans/",
storedscanfolder = "02_pdfs/",
individualcardfolder = "03_pngs/",
shinypicturefolder = "www/",
numberofpagestoprocess = c(1:3),
pdfconvertquality = 300) {
library(pdftools)
# Get date and time stamp
startingdatetime <- gsub(" ", "", as.character(format(Sys.time(), "%Y%m%d%H%M%S")))
scanfolder = paste0(basefolder, scanfolder)
storedscanfolder = paste0(basefolder, storedscanfolder)
individualcardfolder = paste0(basefolder, individualcardfolder)
shinypicturefolder = paste0(basefolder, shinypicturefolder)
# Read the first scan and put it in next folder
files <- list.files(scanfolder, pattern = ".pdf$")
currentscanwithpath <- paste0(scanfolder, files[1])
currentscanwithoutpath <- files[1]
file.copy(currentscanwithpath, storedscanfolder)
file.remove(currentscanwithpath)
currentpdfname <- paste0(storedscanfolder, startingdatetime, ".pdf")
file.rename(paste0(storedscanfolder, files[1]), currentpdfname)
# Read pdf an split it up
lengthofpdf <- pdf_length(currentpdfname)
pdf_convert(currentpdfname, pages = numberofpagestoprocess, dpi = pdfconvertquality) # Here should be an output folder, then we could skip the next few lines
pngfiles <- list.files(pattern = ".png$")
for(file in pngfiles) {
file.copy(file, paste0(individualcardfolder, pngfiles))
file.remove(file)
}
}
turn_scan_into_single_cards()
runApp('digitalisierung_fluggastdaten')
turn_scan_into_single_cards <- function(
basefolder = "digitalisierung_fluggastdaten/",
scanfolder = "01_scans/",
storedscanfolder = "02_pdfs/",
individualcardfolder = "03_pngs/",
shinypicturefolder = "www/",
numberofpagestoprocess = c(1:3),
pdfconvertquality = 150) {
library(pdftools)
# Get date and time stamp
startingdatetime <- gsub(" ", "", as.character(format(Sys.time(), "%Y%m%d%H%M%S")))
scanfolder = paste0(basefolder, scanfolder)
storedscanfolder = paste0(basefolder, storedscanfolder)
individualcardfolder = paste0(basefolder, individualcardfolder)
shinypicturefolder = paste0(basefolder, shinypicturefolder)
# Read the first scan and put it in next folder
files <- list.files(scanfolder, pattern = ".pdf$")
currentscanwithpath <- paste0(scanfolder, files[1])
currentscanwithoutpath <- files[1]
file.copy(currentscanwithpath, storedscanfolder)
file.remove(currentscanwithpath)
currentpdfname <- paste0(storedscanfolder, startingdatetime, ".pdf")
file.rename(paste0(storedscanfolder, files[1]), currentpdfname)
# Read pdf an split it up
lengthofpdf <- pdf_length(currentpdfname)
pdf_convert(currentpdfname, pages = numberofpagestoprocess, dpi = pdfconvertquality) # Here should be an output folder, then we could skip the next few lines
pngfiles <- list.files(pattern = ".png$")
for(file in pngfiles) {
file.copy(file, paste0(individualcardfolder, pngfiles))
file.remove(file)
}
}
turn_scan_into_single_cards()
turn_scan_into_single_cards <- function(
basefolder = "digitalisierung_fluggastdaten/",
scanfolder = "01_scans/",
storedscanfolder = "02_pdfs/",
individualcardfolder = "03_pngs/",
shinypicturefolder = "www/",
numberofpagestoprocess = c(1:3),
pdfconvertquality = 150) {
library(pdftools)
# Get date and time stamp
startingdatetime <- gsub(" ", "", as.character(format(Sys.time(), "%Y%m%d%H%M%S")))
scanfolder = paste0(basefolder, scanfolder)
storedscanfolder = paste0(basefolder, storedscanfolder)
individualcardfolder = paste0(basefolder, individualcardfolder)
shinypicturefolder = paste0(basefolder, shinypicturefolder)
# Read the first scan and put it in next folder
files <- list.files(scanfolder, pattern = ".pdf$")
currentscanwithpath <- paste0(scanfolder, files[1])
currentscanwithoutpath <- files[1]
file.copy(currentscanwithpath, storedscanfolder)
file.remove(currentscanwithpath)
currentpdfname <- paste0(storedscanfolder, startingdatetime, ".pdf")
file.rename(paste0(storedscanfolder, files[1]), currentpdfname)
# Read pdf an split it up
lengthofpdf <- pdf_length(currentpdfname)
pdf_convert(currentpdfname, pages = numberofpagestoprocess, dpi = pdfconvertquality) # Here should be an output folder, then we could skip the next few lines
pngfiles <- list.files(pattern = ".png$")
for(file in pngfiles) {
file.copy(file, paste0(individualcardfolder, pngfiles))
file.remove(file)
}
}
prepare_scratch <- function( standardpdf = "examplescan.pdf",
basefolder = "digitalisierung_fluggastdaten/",
scanfolder = "01_scans/",
storedscanfolder = "02_pdfs/",
individualcardfolder = "03_pngs/",
shinypicturefolder = "www/") {
# Removine all files in storedscanfolder and individualcardfolder for testing
if (length(list.files(paste0(basefolder,storedscanfolder)))!=0){
file.remove(paste0(basefolder, storedscanfolder, list.files(paste0(basefolder,storedscanfolder))))
}
if (length(list.files(paste0(basefolder,individualcardfolder)))!=0){
file.remove(paste0(basefolder, individualcardfolder, list.files(paste0(basefolder,individualcardfolder))))
}
file.copy(paste0(basefolder, standardpdf), paste0(basefolder, scanfolder, standardpdf), overwrite = TRUE)
}
turn_scan_into_single_cards()
turn_scan_into_single_cards <- function(
basefolder = "digitalisierung_fluggastdaten/",
scanfolder = "01_scans/",
storedscanfolder = "02_pdfs/",
individualcardfolder = "03_pngs/",
shinypicturefolder = "www/",
numberofpagestoprocess = c(1:3),
pdfconvertquality = 150) {
library(pdftools)
# Get date and time stamp
startingdatetime <- gsub(" ", "", as.character(format(Sys.time(), "%Y%m%d%H%M%S")))
scanfolder = paste0(basefolder, scanfolder)
storedscanfolder = paste0(basefolder, storedscanfolder)
individualcardfolder = paste0(basefolder, individualcardfolder)
shinypicturefolder = paste0(basefolder, shinypicturefolder)
# Read the first scan and put it in next folder
files <- list.files(scanfolder, pattern = ".pdf$")
currentscanwithpath <- paste0(scanfolder, files[1])
currentscanwithoutpath <- files[1]
file.copy(currentscanwithpath, storedscanfolder)
file.remove(currentscanwithpath)
currentpdfname <- paste0(storedscanfolder, startingdatetime, ".pdf")
file.rename(paste0(storedscanfolder, files[1]), currentpdfname)
# Read pdf an split it up
lengthofpdf <- pdf_length(currentpdfname)
pdf_convert(currentpdfname, pages = numberofpagestoprocess, dpi = pdfconvertquality) # Here should be an output folder, then we could skip the next few lines
pngfiles <- list.files(pattern = ".png$")
for(file in pngfiles) {
file.copy(file, paste0(individualcardfolder, pngfiles))
file.remove(file)
}
}
turn_scan_into_single_cards()
basefolder = "digitalisierung_fluggastdaten/"
scanfolder = "01_scans/"
storedscanfolder = "02_pdfs/"
individualcardfolder = "03_pngs/"
shinypicturefolder = "www/"
numberofpagestoprocess = c(1:3)
pdfconvertquality = 150
# Get date and time stamp
startingdatetime <- gsub(" ", "", as.character(format(Sys.time(), "%Y%m%d%H%M%S")))
scanfolder = paste0(basefolder, scanfolder)
storedscanfolder = paste0(basefolder, storedscanfolder)
individualcardfolder = paste0(basefolder, individualcardfolder)
shinypicturefolder = paste0(basefolder, shinypicturefolder)
# Read the first scan and put it in next folder
files <- list.files(scanfolder, pattern = ".pdf$")
currentscanwithpath <- paste0(scanfolder, files[1])
currentscanwithoutpath <- files[1]
file.copy(currentscanwithpath, storedscanfolder)
getwd()
scanfolder
currentscanwithpath <- paste0(scanfolder, files[1])
currentscanwithoutpath <- files[1]
currentscanwithoutpath
currentscanwithpath <- paste0(scanfolder, files[1])
paste0(scanfolder, files[1])
# Read the first scan and put it in next folder
files <- list.files(scanfolder, pattern = ".pdf$")
scanfolder
file.copy(paste0(basefolder, standardpdf), paste0(basefolder, scanfolder, standardpdf), overwrite = TRUE)
prepare_scratch <- function( standardpdf = "examplescan.pdf",
basefolder = "digitalisierung_fluggastdaten/",
scanfolder = "01_scans/",
storedscanfolder = "02_pdfs/",
individualcardfolder = "03_pngs/",
shinypicturefolder = "www/") {
# Removine all files in storedscanfolder and individualcardfolder for testing
if (length(list.files(paste0(basefolder,storedscanfolder)))!=0){
file.remove(paste0(basefolder, storedscanfolder, list.files(paste0(basefolder,storedscanfolder))))
}
if (length(list.files(paste0(basefolder,individualcardfolder)))!=0){
file.remove(paste0(basefolder, individualcardfolder, list.files(paste0(basefolder,individualcardfolder))))
}
file.copy(paste0(basefolder, standardpdf), paste0(basefolder, scanfolder, standardpdf), overwrite = TRUE)
}
prepare_scratch()
turn_scan_into_single_cards <- function(
basefolder = "digitalisierung_fluggastdaten/",
scanfolder = "01_scans/",
storedscanfolder = "02_pdfs/",
individualcardfolder = "03_pngs/",
shinypicturefolder = "www/",
numberofpagestoprocess = c(1:3),
pdfconvertquality = 150) {
library(pdftools)
# Get date and time stamp
startingdatetime <- gsub(" ", "", as.character(format(Sys.time(), "%Y%m%d%H%M%S")))
scanfolder = paste0(basefolder, scanfolder)
storedscanfolder = paste0(basefolder, storedscanfolder)
individualcardfolder = paste0(basefolder, individualcardfolder)
shinypicturefolder = paste0(basefolder, shinypicturefolder)
# Read the first scan and put it in next folder
files <- list.files(scanfolder, pattern = ".pdf$")
currentscanwithpath <- paste0(scanfolder, files[1])
currentscanwithoutpath <- files[1]
file.copy(currentscanwithpath, storedscanfolder)
file.remove(currentscanwithpath)
currentpdfname <- paste0(storedscanfolder, startingdatetime, ".pdf")
file.rename(paste0(storedscanfolder, files[1]), currentpdfname)
# Read pdf an split it up
lengthofpdf <- pdf_length(currentpdfname)
pdf_convert(currentpdfname, pages = numberofpagestoprocess, dpi = pdfconvertquality) # Here should be an output folder, then we could skip the next few lines
pngfiles <- list.files(pattern = ".png$")
for(file in pngfiles) {
file.copy(file, paste0(individualcardfolder, pngfiles))
file.remove(file)
}
}
turn_scan_into_single_cards()
runApp('digitalisierung_fluggastdaten')
shiny::runApp('digitalisierung_fluggastdaten')
runApp('digitalisierung_fluggastdaten')
runApp('digitalisierung_fluggastdaten')
runApp('digitalisierung_fluggastdaten')
